"""Initial tables

Revision ID: 28dcb9836e01
Revises: 
Create Date: 2025-06-05 23:52:22.373710

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '28dcb9836e01'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('restaurant',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('date_created', sa.DateTime(), nullable=True),
    sa.Column('contact_email', sa.String(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('ruleset',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('restaurant_id', sa.UUID(), nullable=False),
    sa.Column('rules_json', sa.JSON(), nullable=False),
    sa.Column('date_created', sa.DateTime(), nullable=True),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['restaurant_id'], ['restaurant.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('restaurant_id')
    )
    op.create_table('user',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('password_hash', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('role', sa.Enum('admin', 'restaurant_admin', 'staff', name='userrole'), nullable=True),
    sa.Column('restaurant_id', sa.UUID(), nullable=True),
    sa.Column('date_joined', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['restaurant_id'], ['restaurant.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('wine_list_file',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('restaurant_id', sa.UUID(), nullable=False),
    sa.Column('filename', sa.String(), nullable=False),
    sa.Column('file_url', sa.String(), nullable=False),
    sa.Column('uploaded_at', sa.DateTime(), nullable=True),
    sa.Column('parsed_date', sa.DateTime(), nullable=True),
    sa.Column('status', sa.Enum('uploaded', 'processing', 'parsed', 'refined', 'finalized', name='winelistfilestatus'), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['restaurant_id'], ['restaurant.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('wine_entry',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('wine_list_file_id', sa.UUID(), nullable=False),
    sa.Column('restaurant_id', sa.UUID(), nullable=False),
    sa.Column('producer', sa.String(), nullable=True),
    sa.Column('cuvee', sa.String(), nullable=True),
    sa.Column('type', sa.String(), nullable=True),
    sa.Column('vintage', sa.String(), nullable=True),
    sa.Column('price', sa.String(), nullable=True),
    sa.Column('bottle_size', sa.String(), nullable=True),
    sa.Column('grape_variety', sa.String(), nullable=True),
    sa.Column('country', sa.String(), nullable=True),
    sa.Column('region', sa.String(), nullable=True),
    sa.Column('subregion', sa.String(), nullable=True),
    sa.Column('row_confidence', sa.Float(), nullable=True),
    sa.Column('field_confidence', sa.JSON(), nullable=True),
    sa.Column('section_header', sa.String(), nullable=True),
    sa.Column('subheader', sa.String(), nullable=True),
    sa.Column('raw_text', sa.Text(), nullable=True),
    sa.Column('status', sa.Enum('auto', 'user_edited', 'confirmed', 'rejected', name='wineentrystatus'), nullable=True),
    sa.Column('last_modified', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['restaurant_id'], ['restaurant.id'], ),
    sa.ForeignKeyConstraint(['wine_list_file_id'], ['wine_list_file.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('audit_log',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('wine_entry_id', sa.UUID(), nullable=True),
    sa.Column('wine_list_file_id', sa.UUID(), nullable=True),
    sa.Column('action', sa.String(), nullable=False),
    sa.Column('old_value', sa.JSON(), nullable=True),
    sa.Column('new_value', sa.JSON(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['wine_entry_id'], ['wine_entry.id'], ),
    sa.ForeignKeyConstraint(['wine_list_file_id'], ['wine_list_file.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('audit_log')
    op.drop_table('wine_entry')
    op.drop_table('wine_list_file')
    op.drop_table('user')
    op.drop_table('ruleset')
    op.drop_table('restaurant')
    # ### end Alembic commands ###
